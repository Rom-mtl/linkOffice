[{"C:\\Users\\Guillem\\Desktop\\Hackathon\\linkOffice-front\\src\\components\\board\\Board.js":"1"},{"size":5390,"mtime":1610652260944,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1gdi3do","C:\\Users\\Guillem\\Desktop\\Hackathon\\linkOffice-front\\src\\components\\board\\Board.js",["7","8"],"/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport produce from 'immer';\nimport './Board.css';\nimport myPlayer from '../../images/bob.png';\nimport otherPlayer1 from '../../images/otherplayer1.png';\nimport otherPlayer2 from '../../images/otherplayer2.png';\nimport otherPlayer3 from '../../images/otherplayer3.png';\n\nconst axios = require('axios');\n\nconst avatarArray = [otherPlayer1, otherPlayer2, otherPlayer3];\n\nconst instance = axios.create({\n  baseURL: 'http://wet-rabbit-57.loca.lt/',\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n  },\n});\n// const config = { headers: { 'Access-Control-Allow-Origin': '*' } };\n\nconst boardStyle = {\n  width: '100%',\n  height: '800px',\n  display: 'grid',\n  gridTemplateColumns: 'repeat(12, 112px)',\n  gridAutoRows: '200px',\n  gridTemplateRows: 'repeat(14, 57px)',\n  marginBottom: '10px',\n  position: 'absolute',\n  zIndex: '2',\n};\n\nconst squareBoard = {\n  border: 'none',\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nconst board = [];\nfor (let i = 0; i < 168; i += 1) {\n  board.push({\n    id: i,\n    name: '',\n    content: '',\n    currentPlayer: false,\n    otherPlayer: false,\n  });\n}\nboard[137].currentPlayer = true;\nboard[17].otherPlayer = true;\n\nconst Board = (props) => {\n  const [myBoard, setmyBoard] = useState(board);\n  const [playerPosition, setPlayerPosition] = useState(137);\n  const [isFiltered, setIsFiltered] = useState(true);\n  const [isWrite, setIsWrite] = useState(true);\n  const [isOnline, setIsOnline] = useState(true);\n  const { player } = props;\n\n  setInterval(() => {\n    instance.get('users/').then((res) => {\n      console.log(res);\n    });\n  }, 5000);\n\n  const handlerFilter = () => {\n    setIsFiltered(!isFiltered);\n  };\n\n  const handlerWrite = () => {\n    setIsWrite(!isWrite);\n  };\n\n  const handlerOnLine = () => {\n    setIsOnline(!isOnline);\n  };\n\n  const changeSquareContent = (id) => {\n    const nextState = produce(myBoard, (draftState) => {\n      // mettre à jour current player de l'ancienne case à false\n      // mettre à jour le state du player position\n      // mettre à jour current player de l'id en cours\n      // eslint-disable-next-line no-param-reassign\n      draftState[playerPosition].currentPlayer = false;\n      setPlayerPosition(id);\n      // eslint-disable-next-line no-param-reassign\n      draftState[id].currentPlayer = true;\n\n      instance\n        .post(`users/${player.pseudo}/edit`, {\n          name: '',\n        })\n        .then((res) => {\n          console.log(res);\n          // poster le numéro de sa case\n        });\n    });\n    setmyBoard(nextState);\n  };\n\n  return (\n    <div className=\"board-body\">\n      <div style={boardStyle} className=\"board\">\n        {myBoard.map((square, index) => {\n          return (\n            <div\n              style={squareBoard}\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              onKeyPress={() => {}}\n              role=\"button\"\n              tabIndex=\"0\"\n              onClick={() => {\n                changeSquareContent(square.id);\n              }}\n            >\n              {square.currentPlayer ? (\n                <div className=\"playerPosition\">\n                  <p>{player.pseudo}</p>\n                  <img\n                    className=\"playperPositionImg\"\n                    src={myPlayer}\n                    alt=\"player\"\n                  />\n                </div>\n              ) : square.otherPlayer ? (\n                <div className=\"playerPosition\">\n                  <img\n                    className=\"playperPositionImg\"\n                    src={avatarArray[1]}\n                    alt=\"player\"\n                  />\n                </div>\n              ) : (\n                <div />\n              )}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"one\" />\n        <div className=\"two\" />\n        <div className=\"three\" />\n        <div className=\"four\" />\n        <div className=\"five\" />\n        <div className=\"six\" />\n        <div className=\"seven\" />\n        <div className=\"height\" />\n        <div className=\"nine\" />\n        <div className=\"ten\" />\n        <div className=\"eleven\" />\n        <div className=\"douze\" />\n        <div className=\"treize\" />\n        <div\n          onKeyPress={() => {}}\n          role=\"button\"\n          tabIndex=\"0\"\n          label=\"text\"\n          className={!isWrite ? 'conf' : 'conf2'}\n          type=\"button\"\n          onClick={handlerWrite}\n        />\n        <div className=\"cafe\" />\n        <div className=\"canap\" />\n        <div className=\"tapis\" />\n        <div className=\"murTop\" />\n        <div className=\"murBottom\" />\n        <div className=\"murLeft\" />\n        <div className=\"murRight\" />\n        <div className=\"cafePointer\" />\n        <div className=\"gamePointer\" />\n        <div\n          onKeyPress={() => {}}\n          role=\"button\"\n          tabIndex=\"0\"\n          label=\"text\"\n          className={!isFiltered ? 'planteDeux' : 'planteFane'}\n          type=\"button\"\n          onClick={handlerFilter}\n        />\n        <div\n          onKeyPress={() => {}}\n          role=\"button\"\n          tabIndex=\"0\"\n          label=\"text\"\n          className={!isOnline ? 'thomas' : 'Thomas2'}\n          type=\"button\"\n          onClick={handlerOnLine}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n",{"ruleId":"9","severity":1,"message":"10","line":63,"column":7,"nodeType":"11","messageId":"12","endLine":63,"endColumn":18},{"ruleId":"9","severity":1,"message":"10","line":95,"column":11,"nodeType":"11","messageId":"12","endLine":95,"endColumn":22},"no-console","Unexpected console statement.","MemberExpression","unexpected"]